Fonctionnement des Menus

    Tableau de bord
        Lien : href="../page/tableau_de_bord.php"
        Fonctionnement : Cette page présente un aperçu général des activités récentes, des statistiques de livraison, des commandes en cours, et d'autres informations essentielles. Elle permet à l'utilisateur de visualiser rapidement l'état de son service.

    Repas
        Sous-menu :
            Liste des repas : Affiche tous les repas disponibles avec des options pour les modifier ou les supprimer.
            Ajouter un repas : Permet à l'utilisateur d'ajouter de nouveaux repas à la base de données via un formulaire.
            Catégories de repas : Affiche les différentes catégories de repas (par exemple, entrées, plats principaux, desserts) et permet d'ajouter ou de modifier des catégories.

    Commandes
        Sous-menu :
            Toutes les commandes : Affiche une liste de toutes les commandes passées avec des détails tels que le statut, la date et le montant.
            Commandes en attente : Filtre les commandes qui n'ont pas encore été traitées ou confirmées.
            Commandes livrées : Affiche les commandes qui ont déjà été livrées, permettant à l'utilisateur de suivre l'historique des livraisons.

    Livraisons
        Sous-menu :
            Livreurs disponibles : Affiche la liste des livreurs qui sont actuellement disponibles pour prendre des commandes.
            Livraisons en cours : Montre les livraisons qui sont actuellement en cours, avec des informations sur les livreurs et les commandes.
            Livraisons terminées : Affiche les livraisons qui ont été complétées avec succès.
            Affecter un livreur : Permet à l'utilisateur d'assigner un livreur à une commande spécifique.

    Livreurs
        Sous-menu :
            Liste des livreurs : Affiche tous les livreurs inscrits dans le système, avec des options pour voir les détails ou les supprimer.
            Ajouter un livreur : Permet d'ajouter de nouveaux livreurs au système via un formulaire.
            Statut des livreurs : Montre l'état actuel des livreurs (actif, inactif, en pause) pour une gestion efficace.

    Paiements
        Sous-menu :
            Historique des paiements : Affiche un registre de tous les paiements effectués, avec des détails sur les montants et les méthodes.
            Statut des paiements : Permet de vérifier l'état des paiements (en attente, confirmés, échoués).
            Méthodes de paiement : Affiche les différentes méthodes de paiement acceptées et permet d'en ajouter ou d'en modifier.

    Paramètres
        Sous-menu :
            Mon compte : Permet à l'utilisateur de gérer ses informations personnelles et de mettre à jour ses préférences.
            Paramètres du site : Permet de configurer des options générales pour le site, telles que les préférences de notification ou les paramètres d'affichage.
            Notifications : Permet à l'utilisateur de gérer ses préférences en matière de notifications (email, SMS, etc.).

Résumé :

Chaque élément du menu a une fonction précise qui facilite la gestion des repas, des commandes, des livreurs, des paiements, et des paramètres de l'application. En organisant ces fonctionnalités de manière intuitive, tu permettras aux utilisateurs de naviguer facilement dans ton application, d'accomplir des tâches rapidement, et de rester informés sur l'état de leur service.


Pour assigner plusieurs produits d'une commande à un livreur, le système de gestion suit ces étapes :

    Création de la Commande Groupée : Lorsqu'un client valide la commande avec plusieurs produits, le système crée une commande unique contenant tous les produits choisis. Cette commande est enregistrée avec tous les détails, comme l’adresse de livraison et les préférences du client.

    Préparation en Cuisine : La commande groupée est envoyée en cuisine, où chaque produit est préparé individuellement mais reste lié à la commande unique.

    Assignation de la Commande au Livreur : Quand tous les produits de la commande sont prêts, le système vérifie les livreurs disponibles. Il attribue la commande au livreur le plus proche ou à celui ayant le meilleur itinéraire pour une livraison rapide. Le livreur est informé des détails complets de la commande et de l’adresse de livraison.

    Optimisation des Livraisons : Si le restaurant reçoit plusieurs commandes pour des adresses proches, le système peut regrouper ces commandes (en fonction de l’espace et de la capacité du livreur) pour économiser du temps et réduire les frais.

    Suivi en Temps Réel : Le livreur peut marquer la commande comme "En route" dans le système, ce qui déclenche une notification pour le client afin de suivre la livraison.

Ainsi, le livreur est assigné à une commande unique contenant tous les produits du client pour une livraison unifiée, simplifiant la gestion et assurant une livraison coordonnée.



try {
    // Début de la transaction
    $connexion->beginTransaction();

    // Calculer le montant total de la commande
    foreach ($_SESSION['cart'] as $item) {
        $price = $item['price'] ?? 0; // Utiliser l'opérateur null coalescent pour un prix par défaut de 0
        $quantity = $item['quantity'] ?? 0; // Utiliser l'opérateur null coalescent pour une quantité par défaut de 0
        $grandTotal += $price * $quantity;
    }

    // Générer un UUID unique pour la commande
    $order_uuid = bin2hex(random_bytes(16));

    if (empty($order_uuid)) {
        throw new Exception("Erreur lors de la génération de l'UUID de commande.");
    }

    // Insérer la commande dans la table orders
    $stmt = $connexion->prepare("
        INSERT INTO orders (order_uuid, user_uuid, order_date, status, total_amount, address, preferences)
        VALUES (:order_uuid, :user_uuid, NOW(), 'pending', :total_amount, :address, :preferences)
    ");
    $stmt->execute([
        ':order_uuid' => $order_uuid,
        ':user_uuid' => $user_uuid,
        ':total_amount' => $grandTotal, // Assurez-vous que le total est correctement calculé
        ':address' => $address,
        ':preferences' => $preferences
    ]);

    // Insérer chaque produit du panier dans la table order_items
    foreach ($_SESSION['cart'] as $item) {
        $meal_uuid = $item['meal_uuid'];
        $quantity = $item['quantity'] ?? 0; // Utiliser l'opérateur null coalescent pour une quantité par défaut de 0
        $unit_price = $item['price'] ?? 0; // Utiliser l'opérateur null coalescent pour un prix par défaut de 0
        $total_price = $quantity * $unit_price; // Calculer le prix total

        // Générer un UUID unique pour chaque item
        $item_id = bin2hex(random_bytes(16)); // Générer un UUID pour chaque item

        // Insérer les éléments de commande
        $stmt = $connexion->prepare("
            INSERT INTO order_items (item_id, order_uuid, meal_uuid, quantity, unit_price, total_price)
            VALUES (:item_id, :order_uuid, :meal_uuid, :quantity, :unit_price, :total_price)
        ");
        $stmt->execute([
            ':item_id' => $item_id, // Utilisez l'UUID généré pour chaque item
            ':order_uuid' => $order_uuid,
            ':meal_uuid' => $meal_uuid,
            ':quantity' => $quantity,
            ':unit_price' => $unit_price,
            ':total_price' => $total_price // S'assurer que le total est correctement calculé
        ]);
    }

    // Commit de la transaction
    $connexion->commit();

    // Vider le panier après validation
    unset($_SESSION['cart']);

    echo "Commande validée avec succès !";

} catch (Exception $e) {
    // Annuler la transaction en cas d'erreur
    $connexion->rollBack();
    echo "Erreur lors de la validation de la commande : " . $e->getMessage();
}